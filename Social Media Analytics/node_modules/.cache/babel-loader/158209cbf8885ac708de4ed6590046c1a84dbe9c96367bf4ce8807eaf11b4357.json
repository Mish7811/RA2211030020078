{"ast":null,"code":"var _jsxFileName = \"/Users/mishr/Documents/GitHub/RA2211030020078/Social Media Analytics/src/components/Trending.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getCachedData } from '../api';\nimport { TrendingUp as Trending } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TrendingPosts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [commentsCount, setCommentsCount] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchTrendingPosts() {\n      try {\n        const data = await getCachedData();\n        if (!data.posts || !data.comments) {\n          console.error(\"Invalid API response:\", data);\n          return;\n        }\n        const commentCount = {};\n        data.comments.forEach(comment => {\n          commentCount[comment.postid] = (commentCount[comment.postid] || 0) + 1;\n        });\n        const maxComments = Math.max(...Object.values(commentCount), 0);\n        const trendingPosts = data.posts.filter(post => commentCount[post.id] === maxComments);\n        setPosts(trendingPosts);\n        setCommentsCount(commentCount);\n      } catch (error) {\n        console.error('Error fetching trending posts:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchTrendingPosts();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-900 mb-8 flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Trending, {\n        className: \"w-8 h-8 mr-3 text-red-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), \"Trending Posts\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-6\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://source.unsplash.com/random/800x400?nature=${post.id}`,\n          alt: \"Post cover\",\n          className: \"w-full h-48 object-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-900 text-lg mb-4\",\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-t pt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-semibold text-gray-700 mb-2\",\n              children: [commentsCount[post.id] || 0, \" comments\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(TrendingPosts, \"/gumvPYQqOwfu7N41ziDNWF4PpI=\");\n_c = TrendingPosts;\nvar _c;\n$RefreshReg$(_c, \"TrendingPosts\");","map":{"version":3,"names":["useEffect","useState","getCachedData","TrendingUp","Trending","jsxDEV","_jsxDEV","TrendingPosts","_s","posts","setPosts","commentsCount","setCommentsCount","loading","setLoading","fetchTrendingPosts","data","comments","console","error","commentCount","forEach","comment","postid","maxComments","Math","max","Object","values","trendingPosts","filter","post","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","content","_c","$RefreshReg$"],"sources":["/Users/mishr/Documents/GitHub/RA2211030020078/Social Media Analytics/src/components/Trending.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getCachedData } from '../api';\nimport { TrendingUp as Trending } from 'lucide-react';\n\ntype Post = {\n  id: number;\n  content: string;\n};\n\ntype Comment = {\n  id: number;\n  postid: number;\n  content: string;\n};\n\ntype ApiResponse = {\n  posts: Post[];\n  comments: Comment[];\n};\n\nexport default function TrendingPosts() {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [commentsCount, setCommentsCount] = useState<Record<number, number>>({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchTrendingPosts() {\n      try {\n        const data: ApiResponse = await getCachedData();\n\n        if (!data.posts || !data.comments) {\n          console.error(\"Invalid API response:\", data);\n          return;\n        }\n\n        const commentCount: Record<number, number> = {};\n        data.comments.forEach((comment) => {\n          commentCount[comment.postid] = (commentCount[comment.postid] || 0) + 1;\n        });\n\n        const maxComments = Math.max(...Object.values(commentCount), 0);\n\n        const trendingPosts = data.posts.filter(\n          (post) => commentCount[post.id] === maxComments\n        );\n\n        setPosts(trendingPosts);\n        setCommentsCount(commentCount);\n      } catch (error) {\n        console.error('Error fetching trending posts:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchTrendingPosts();\n  }, []);\n\n  if (loading) {\n    return <div className=\"flex justify-center items-center h-64\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6\">\n      <h1 className=\"text-3xl font-bold text-gray-900 mb-8 flex items-center\">\n        <Trending className=\"w-8 h-8 mr-3 text-red-500\" />\n        Trending Posts\n      </h1>\n      <div className=\"grid gap-6\">\n        {posts.map((post) => (\n          <div key={post.id} className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n            <img\n              src={`https://source.unsplash.com/random/800x400?nature=${post.id}`}\n              alt=\"Post cover\"\n              className=\"w-full h-48 object-cover\"\n            />\n            <div className=\"p-6\">\n              <p className=\"text-gray-900 text-lg mb-4\">{post.content}</p>\n              <div className=\"border-t pt-4\">\n                <h3 className=\"text-sm font-semibold text-gray-700 mb-2\">\n                  {commentsCount[post.id] || 0} comments\n                </h3>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,QAAQ;AACtC,SAASC,UAAU,IAAIC,QAAQ,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkBtD,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAyB,CAAC,CAAC,CAAC;EAC9E,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,eAAee,kBAAkBA,CAAA,EAAG;MAClC,IAAI;QACF,MAAMC,IAAiB,GAAG,MAAMd,aAAa,CAAC,CAAC;QAE/C,IAAI,CAACc,IAAI,CAACP,KAAK,IAAI,CAACO,IAAI,CAACC,QAAQ,EAAE;UACjCC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEH,IAAI,CAAC;UAC5C;QACF;QAEA,MAAMI,YAAoC,GAAG,CAAC,CAAC;QAC/CJ,IAAI,CAACC,QAAQ,CAACI,OAAO,CAAEC,OAAO,IAAK;UACjCF,YAAY,CAACE,OAAO,CAACC,MAAM,CAAC,GAAG,CAACH,YAAY,CAACE,OAAO,CAACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACxE,CAAC,CAAC;QAEF,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGC,MAAM,CAACC,MAAM,CAACR,YAAY,CAAC,EAAE,CAAC,CAAC;QAE/D,MAAMS,aAAa,GAAGb,IAAI,CAACP,KAAK,CAACqB,MAAM,CACpCC,IAAI,IAAKX,YAAY,CAACW,IAAI,CAACC,EAAE,CAAC,KAAKR,WACtC,CAAC;QAEDd,QAAQ,CAACmB,aAAa,CAAC;QACvBjB,gBAAgB,CAACQ,YAAY,CAAC;MAChC,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD,CAAC,SAAS;QACRL,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IAEAC,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACX,oBAAOP,OAAA;MAAK2B,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChF;EAEA,oBACEhC,OAAA;IAAK2B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpC5B,OAAA;MAAI2B,SAAS,EAAC,yDAAyD;MAAAC,QAAA,gBACrE5B,OAAA,CAACF,QAAQ;QAAC6B,SAAS,EAAC;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,kBAEpD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLhC,OAAA;MAAK2B,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBzB,KAAK,CAAC8B,GAAG,CAAER,IAAI,iBACdzB,OAAA;QAAmB2B,SAAS,EAAC,+CAA+C;QAAAC,QAAA,gBAC1E5B,OAAA;UACEkC,GAAG,EAAE,qDAAqDT,IAAI,CAACC,EAAE,EAAG;UACpES,GAAG,EAAC,YAAY;UAChBR,SAAS,EAAC;QAA0B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,eACFhC,OAAA;UAAK2B,SAAS,EAAC,KAAK;UAAAC,QAAA,gBAClB5B,OAAA;YAAG2B,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EAAEH,IAAI,CAACW;UAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5DhC,OAAA;YAAK2B,SAAS,EAAC,eAAe;YAAAC,QAAA,eAC5B5B,OAAA;cAAI2B,SAAS,EAAC,0CAA0C;cAAAC,QAAA,GACrDvB,aAAa,CAACoB,IAAI,CAACC,EAAE,CAAC,IAAI,CAAC,EAAC,WAC/B;YAAA;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GAbEP,IAAI,CAACC,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9B,EAAA,CArEuBD,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}